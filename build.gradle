plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.idealstudy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// lombok과 mapstruct를 같이 쓰는 경우
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	// https://mvnrepository.com/artifact/org.mapstruct/mapstruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"
	// If you are using mapstruct in test code
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"

	// for JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// for OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	// for send Mail
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.3.4'

	// redis
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.3.5'

	// for higher spring security version
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
	implementation 'org.springframework.security:spring-security-core:6.4.0'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-web
	implementation 'org.springframework.security:spring-security-web:6.4.0'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-config
	implementation 'org.springframework.security:spring-security-config:6.4.0'
	// https://mvnrepository.com/artifact/org.springframework/spring-aop
	implementation 'org.springframework:spring-aop:6.2.0'
	// https://mvnrepository.com/artifact/org.springframework/spring-web
	implementation 'org.springframework:spring-web:6.2.0'
	// https://mvnrepository.com/artifact/org.springframework/spring-core
	implementation 'org.springframework:spring-core:6.2.0'
	// https://mvnrepository.com/artifact/org.springframework/spring-jcl
	implementation 'org.springframework:spring-jcl:6.2.0'
	// https://mvnrepository.com/artifact/org.springframework/spring-beans
	implementation 'org.springframework:spring-beans:6.2.0'
	// https://mvnrepository.com/artifact/org.springframework/spring-expression
	implementation 'org.springframework:spring-expression:6.2.0'
	// https://mvnrepository.com/artifact/org.springframework/spring-context
	implementation 'org.springframework:spring-context:6.2.0'
	// https://mvnrepository.com/artifact/org.springframework/spring-aspects
	implementation 'org.springframework:spring-aspects:6.2.0'

	implementation 'com.clickntap:vimeo:2.0'
}

test {
	enabled = false
}

tasks.named('test') {
	useJUnitPlatform()
}
